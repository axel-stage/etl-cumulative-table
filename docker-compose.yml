services:
  database:
    container_name: database
    image: ${POSTGRES_IMAGE}
    ports:
      - ${DATABASE_PORT}
    restart: always
    env_file:
      - path: ./database/.env
    volumes:
      - database:/var/lib/postgresql/data
      - ./schema:/schema
      - ./query:/query
      - ./database/init-database.sh:/docker-entrypoint-initdb.d/init-postgres.sh

  postgres:
    container_name: postgres
    image: ${POSTGRES_IMAGE}
    ports:
      - ${POSTGRES_PORT}
    restart: always
    env_file:
      - path: ./airflow/.env

  init:
    container_name: init
    image: ${AIRFLOW_IMAGE}
    depends_on:
      - postgres
    env_file:
      - path: ./airflow/.env
    volumes:
      - ./airflow/init-airflow.sh:/init-airflow.sh
    entrypoint: /bin/bash /init-airflow.sh

  webserver:
    container_name: webserver
    image: ${AIRFLOW_IMAGE}
    ports:
      - ${WEBSERVER_PORT}
    restart: always
    depends_on:
      - postgres
    volumes:
      - logs:/opt/airflow/logs
    env_file:
      - path: ./airflow/.env
    command: webserver

  scheduler:
    container_name: scheduler
    image: ${AIRFLOW_IMAGE}
    restart: always
    depends_on:
      - postgres
    volumes:
      - logs:/opt/airflow/logs
      - ./airflow/dags:/opt/airflow/dags
      - ./query:/opt/airflow/query
    env_file:
      - path: ./airflow/.env
    command: scheduler

volumes:
  logs:
    driver: local
  database:
    driver: local

networks:
  default:
    name: dev-net
